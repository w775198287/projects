--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Scene
local Scene=cc.Node:create()
Scene:setName("Scene")

--Create rootpanel
local rootpanel = ccui.Layout:create()
rootpanel:ignoreContentAdaptWithSize(false)
rootpanel:setBackGroundColorType(1)
rootpanel:setBackGroundColor(cc.c3b(150, 200, 255))
rootpanel:setBackGroundColorOpacity(123)
rootpanel:setTouchEnabled(true);
rootpanel:setLayoutComponentEnabled(true)
rootpanel:setName("rootpanel")
rootpanel:setTag(14)
rootpanel:setCascadeColorEnabled(true)
rootpanel:setCascadeOpacityEnabled(true)
rootpanel:setAnchorPoint(0.5000, 0.5000)
rootpanel:setPosition(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(rootpanel)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize(cc.size(1242.0000, 2208.0000))
layout:setHorizontalEdge(3)
layout:setVerticalEdge(3)
layout:setLeftMargin(-621.0000)
layout:setRightMargin(621.0000)
layout:setTopMargin(1104.0000)
layout:setBottomMargin(-1104.0000)
Scene:addChild(rootpanel)

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("Default/ImageFile.png",0)
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(18)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize(cc.size(1242.0000, 2208.0000))
layout:setLeftMargin(-621.0000)
layout:setRightMargin(621.0000)
layout:setTopMargin(1104.0000)
layout:setBottomMargin(-1104.0000)
Scene:addChild(bg)

--Create shadepanel
local shadepanel = ccui.Layout:create()
shadepanel:ignoreContentAdaptWithSize(false)
shadepanel:setBackGroundColorType(1)
shadepanel:setBackGroundColor(cc.c3b(26, 26, 26))
shadepanel:setLayoutComponentEnabled(true)
shadepanel:setName("shadepanel")
shadepanel:setTag(46)
shadepanel:setCascadeColorEnabled(true)
shadepanel:setCascadeOpacityEnabled(true)
shadepanel:setPosition(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(shadepanel)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setPercentWidthEnabled(true)
layout:setPercentHeightEnabled(true)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize(cc.size(1242.0000, 2208.0000))
layout:setHorizontalEdge(3)
layout:setLeftMargin(0.0000)
layout:setRightMargin(0.0000)
layout:setTopMargin(0.0000)
layout:setBottomMargin(0.0000)
bg:addChild(shadepanel)

--Create btntitleexit
local btntitleexit = ccui.Button:create()
btntitleexit:ignoreContentAdaptWithSize(false)
btntitleexit:loadTextureNormal("minigame/minigamelist/exit.png",0)
btntitleexit:loadTexturePressed("minigame/minigamelist/exit_pressed.png",0)
btntitleexit:loadTextureDisabled("minigame/minigamelist/exit_pressed.png",0)
btntitleexit:setTitleFontSize(14)
btntitleexit:setTitleColor(cc.c3b(65, 65, 70))
btntitleexit:setScale9Enabled(true)
btntitleexit:setCapInsets(cc.rect(15,11,44,52))
btntitleexit:setLayoutComponentEnabled(true)
btntitleexit:setName("btntitleexit")
btntitleexit:setTag(9)
btntitleexit:setCascadeColorEnabled(true)
btntitleexit:setCascadeOpacityEnabled(true)
btntitleexit:setAnchorPoint(0.0000, 0.5000)
btntitleexit:setPosition(0.0000, 2065.0000)
if callBackProvider~=nil then
      btntitleexit:addClickEventListener(callBackProvider("minigamelistscene.lua", btntitleexit, "onExitMiniGameButton"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(btntitleexit)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.9352)
layout:setPercentWidth(0.1192)
layout:setPercentHeight(0.0670)
layout:setSize(cc.size(148.0000, 148.0000))
layout:setHorizontalEdge(3)
layout:setLeftMargin(0.0000)
layout:setRightMargin(1094.0000)
layout:setTopMargin(69.0000)
layout:setBottomMargin(1991.0000)
bg:addChild(btntitleexit)

--Create titlenametext
local titlenametext = ccui.Text:create()
titlenametext:ignoreContentAdaptWithSize(true)
titlenametext:setTextAreaSize(cc.size(0, 0))
titlenametext:setFontSize(50)
titlenametext:setString([[小游戏]])
titlenametext:setLayoutComponentEnabled(true)
titlenametext:setName("titlenametext")
titlenametext:setTag(8)
titlenametext:setCascadeColorEnabled(true)
titlenametext:setCascadeOpacityEnabled(true)
titlenametext:setPosition(621.0000, 2070.0000)
titlenametext:setColor(cc.c3b(254, 223, 158))
layout = ccui.LayoutComponent:bindLayoutComponent(titlenametext)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.9375)
layout:setSize(cc.size(150.0000, 50.0000))
layout:setHorizontalEdge(3)
layout:setLeftMargin(546.0000)
layout:setRightMargin(546.0000)
layout:setTopMargin(113.0000)
layout:setBottomMargin(2045.0000)
bg:addChild(titlenametext)

--Create listview
local listview = ccui.ListView:create()
listview:setItemsMargin(24)
listview:setDirection(1)
listview:setGravity(2)
listview:ignoreContentAdaptWithSize(false)
listview:setBackGroundColorType(1)
listview:setBackGroundColor(cc.c3b(36, 36, 36))
listview:setLayoutComponentEnabled(true)
listview:setName("listview")
listview:setTag(3)
listview:setCascadeColorEnabled(true)
listview:setCascadeOpacityEnabled(true)
listview:setPosition(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(listview)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setPercentWidthEnabled(true)
layout:setPercentHeightEnabled(true)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.9000)
layout:setSize(cc.size(1242.0000, 1987.2000))
layout:setHorizontalEdge(3)
layout:setLeftMargin(0.0000)
layout:setRightMargin(0.0000)
layout:setTopMargin(220.8000)
layout:setBottomMargin(0.0000)
bg:addChild(listview)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Scene
return result;
end

return Result

